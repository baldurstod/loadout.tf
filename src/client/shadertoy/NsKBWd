//MIT License

//Copyright (c) 2022 Brian Fearn

//Permission is hereby granted, free of charge, to any person obtaining a copy
//of this software and associated documentation files (the "Software"), to deal
//in the Software without restriction, including without limitation the rights
//to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//copies of the Software, and to permit persons to whom the Software is
//furnished to do so, subject to the following conditions:

//The above copyright notice and this permission notice shall be included in all
//copies or substantial portions of the Software.

//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//SOFTWARE.

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    vec2 uv = (fragCoord - .5 * iResolution.xy) / iResolution.y;
    vec2 m = (iMouse.xy - .5 * iResolution.xy) / iResolution.y;
    vec2 diff = uv;
    float th = atan(diff.y, diff.x);
    float t = pow(0.5 * (1. + sin(iTime * 0.1)), 3.);
    float l = 0.05 * (1. + sin(th * 2. + iTime)) - pow(length(diff), 0.1 + t * 10.);
    float fth = pow(1. + sin((th + length(diff) * PI / 2.) * 30. + iTime * 4.), 1.5);
    //l = fract(3. * th / PI) * l;
    float fl = fth * pow(0.5 * (1. + sin(l * 2. * PI * 30.)), 4.);
    vec3 col = vec3(fl * 0.9, fl * 0.7, 0.1 + fl * 0.5);

    fragColor = vec4(col, 1.0);
}
