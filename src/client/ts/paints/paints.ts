import { vec3 } from 'gl-matrix';
import paints from '../../json/paints.json';
import { Team } from '../loadout/enums';

export enum Paints {
	None = 0,

	// Regular paints
	IndubitablyGreen = 1,
	ZepheniahsGreed = 2,
	NobleHattersViolet = 3,
	ColorNo216_190_216 = 4,
	ADeepCommitmentToPurple = 5,
	MannCoOrange = 6,
	Muskelmannbraun = 7,
	PeculiarlyDrabTincture = 8,
	RadiganConagherBrown = 9,
	YeOldeRusticColour = 10,
	AustraliumGold = 11,
	AgedMoustacheGrey = 12,
	AnExtraordinaryAbundanceOfTinge = 13,
	ADistinctiveLackOfHue = 14,
	PinkAsHell = 15,
	AColorSimilarToSlate = 16,
	DrablyOlive = 17,
	TheBitterTasteOfDefeatAndLime = 18,
	TheColorOfAGentlemannsBusinessPants = 19,
	DarkSalmonInjustice = 20,
	AMannsMint = 21,
	AfterEight = 22,

	// Team colored paints
	TeamSpirit = 101,
	OperatorsOveralls = 102,
	WaterloggedLabCoat = 103,
	BalaclavasAreForever = 104,
	AnAirOfDebonair = 105,
	TheValueOfTeamwork = 106,

	// Halloween Spells
	PutrescentPigmentation = 201,
	DieJob = 202,
	ChromaticCorruption = 203,
	SpectralSpectrum = 204,
	SinisterStaining = 205,

	Custom = 1000,
}

export type PaintDefinition = {
	name: string,
	paint: Paints,
	teamColored: boolean,
	tintRed: number,
	tintBlu: number,
	spell: boolean,
	time?: number,
}

export const paintList = new Map<Paints, PaintDefinition>();

for (const paintJSON of paints) {
	paintList.set(paintJSON.id, {
		name: paintJSON.name,
		paint: paintJSON.id,
		teamColored: paintJSON.team ?? false,
		tintRed: paintJSON.tint_red,
		tintBlu: paintJSON.tint_blu ?? paintJSON.tint_red,
		spell: paintJSON.spell ?? false,
	});
}

export function getPaint(paint: Paints): Paint | null {
	const paintDefinition = paintList.get(paint);
	if (paintDefinition) {
		return new Paint(paintDefinition);
	}
	return null;
}

function colorToTint(color: number, tint: vec3): void {
	tint[0] = ((color & 0xFF0000) >> 16) / 255.0;
	tint[1] = ((color & 0x00FF00) >> 8) / 255.0;
	tint[2] = ((color & 0x0000FF) >> 0) / 255.0;
}

const kSamplePoints = 256;

/**
 * A TF2 paint
 */
export class Paint {
	#name: string;
	#paint: Paints;
	#tintRed = vec3.create();
	#tintBlu = vec3.create();
	#tint = vec3.create();
	spell: boolean;
	teamColored: boolean;
	time?: number;

	/*

		name: string,
		paint: Paints,
		teamColored: boolean,
		tintRed: number,
		tintBlu: number,
		spell: boolean,
		*/

	//constructor(name: string, colorRed: number, colorBlu: number, varying: boolean) {
	constructor(definition: PaintDefinition) {
		this.#name = definition.name;
		this.#paint = definition.paint;
		colorToTint(definition.tintRed, this.#tintRed);
		colorToTint(definition.tintBlu, this.#tintBlu);
		this.spell = definition.spell;
		this.teamColored = definition.teamColored;
	}

	/**
	 * Get color as tint rgb
	 * @param {Number} color The color, in integer format (ie: Indubitably Green: 7511618)
	 */

	/**
	 * Compute the paint tint for the given team
	 * @param team The team to compute the tint for
	 * @returns vec3
	 */
	getTint(team: Team): vec3 {
		if (this.spell) {
			//if (!this.computed) {
			this.#computeTint(team, this.time ?? performance.now() * 0.001);
			//}
			return this.#tint;
		}
		return team == Team.Red ? this.#tintRed : this.#tintBlu;
	}

	#computeTint(team: Team, time: number): void {
		if (team == Team.Red) {
			vec3.copy(this.#tint, this.#tintRed);
		} else {
			vec3.copy(this.#tint, this.#tintBlu);
		}
		if (this.spell) {
			//if (!this.computed)
			{
				const paintSamples = team == Team.Red ? pointSampleContentTeamRed.get(this.#paint) : pointSampleContentTeamBlu.get(this.#paint);
				if (paintSamples) {
					const fScaledTime = time * 22.0;
					const unSamplePoint0 = Math.floor(fScaledTime) % kSamplePoints;
					// TODO: lerp between two samples
					//const unSamplePoint1 = (unSamplePoint0 + 1) % kSamplePoints;
					const color = paintSamples[unSamplePoint0]!;
					const b = (color & 0x000000FF);
					const g = (color & 0x0000FF00) >> 8;
					const r = (color & 0x00FF0000) >> 16;
					this.#tint[0] = r / 255.0;
					this.#tint[1] = g / 255.0;
					this.#tint[2] = b / 255.0;
				}
			}
		}
	}
}

const k_unWitchYellow = [
	5328971, 5328971, 5328971, 5328971, 5328971, 5328971, 5328971, 5328971,
	5328971, 5328971, 5395018, 5591625, 5723465, 5855050, 5921095, 6052679,
	6315591, 6447429, 6513222, 6710852, 7039299, 7170884, 7433793, 7631425,
	7894336, 8222784, 8354622, 8618045, 8815420, 9078333, 9406779, 9604411,
	9802040, 10064952, 10328376, 10459959, 10722870, 11051318, 11314483, 11511859,
	11709490, 11841074, 12103729, 12301360, 12498479, 12630063, 12761901, 12959022,
	13090604, 13156651, 13288236, 13485099, 13616683, 13682474, 13748010, 13813801,
	13945386, 13945386, 14011433, 14011433, 14011433, 13945386, 13945386, 13879594,
	13814314, 13813801, 13748010, 13682474, 13616681, 13616683, 13550890, 13550890,
	13354027, 13288234, 13288236, 13222443, 13222443, 13156651, 13156651, 13025322,
	13025324, 12959531, 12893740, 12893740, 12893740, 12762413, 12696621, 12696621,
	12630828, 12630574, 12630574, 12499760, 12433713, 12433713, 12367922, 12302642,
	12302387, 12236596, 12236598, 12171575, 12105528, 12039736, 11908409, 11974204,
	11908413, 11842880, 11842880, 11842880, 11908421, 11776837, 11645765, 11579973,
	11579975, 11514182, 11448137, 11382344, 11316298, 11184712, 11053387, 11053387,
	10921802, 10855755, 10724941, 10659150, 10658896, 10527311, 10527057, 10395986,
	10330195, 10264147, 10264147, 10264149, 10263895, 10198104, 10132313, 10198106,
	10132058, 10263133, 10263133, 10328928, 10394721, 10394723, 10328675, 10394981,
	10460263, 10526056, 10329190, 10394983, 10329188, 10394723, 10328928, 10328926,
	10526042, 10526040, 10394452, 10459985, 10394446, 10460235, 10525511, 10525763,
	10657089, 10657341, 10723131, 10854456, 10920502, 11183156, 11380273, 11512111,
	11906350, 12038190, 12301100, 12629804, 12827436, 13221676, 13419306, 13616170,
	13813803, 13945386, 14077226, 13879593, 13813801, 13616170, 13485099, 13221674,
	12893227, 12630057, 12301098, 12103723, 11775018, 11511594, 11117353, 10853929,
	10459431, 10130984, 9868327, 9670182, 9472807, 9275686, 9013027, 8815396,
	8618019, 8420385, 8289569, 8223006, 8026399, 7894813, 7763484, 7829020,
	7763738, 7894810, 7960857, 8158234, 8552475, 8684059, 8881690, 9079324,
	9210908, 9407772, 9605405, 9671198, 9736989, 9736989, 9736991, 9605918,
	9473565, 9341979, 9078809, 8684059, 8355096, 7763224, 7434010, 6973206,
	6447895, 6118679, 5723416, 5394715, 5131549, 5000483, 5000234, 4999981,
	5000242, 4999990, 4868407, 4671291, 4539707, 4539709, 4605502, 4671041,
	4868420, 5000006, 5065799, 5131592, 5197385, 5263178, 5328971, 5263178,
];

const k_unDistinctiveLackOfSanity = [
	5720667, 5720667, 5786460, 5720667, 5786460, 5786460, 5851996, 5851741,
	6048606, 6048606, 6114145, 6114145, 6245474, 6311013, 6311013, 6441829,
	6507624, 6573417, 6704491, 6704491, 6704493, 6901359, 6901359, 7097970,
	7097970, 7163252, 7229045, 7294840, 7425656, 7491449, 7622523, 7688062,
	7819137, 7950209, 8147077, 8277894, 8409226, 8540301, 8540303, 8671376,
	8737171, 8737171, 8867985, 8671376, 8671374, 8540301, 8475019, 8475273,
	8278408, 8147334, 8082309, 7885441, 7819902, 7754366, 7754621, 7558012,
	7492217, 7426937, 7361142, 7164533, 7164531, 7164529, 7033456, 6967663,
	6902382, 6836587, 6771564, 6771564, 6639978, 6574185, 6640232, 6508903,
	6443110, 6574439, 6443110, 6442599, 6442599, 6573415, 6508392, 6573417,
	6507624, 6572905, 6572905, 6572907, 6638187, 6703212, 6768494, 6834289,
	6965105, 6964850, 7030132, 7029621, 7226486, 7160439, 7225720, 7356538,
	7421820, 7421820, 7487102, 7617920, 7617921, 7748226, 7814021, 7879303,
	7944328, 7944330, 8074635, 8271500, 8271246, 8336527, 8336529, 8598420,
	8532629, 8597911, 8794521, 8859803, 8859803, 8990878, 9121440, 9120928,
	9317793, 9317539, 9382823, 9448103, 9513898, 9644714, 9709995, 9840813,
	9840815, 9906095, 9971890, 9971378, 10102194, 10167989, 10233269, 10364085,
	10364087, 10363833, 10429369, 10429114, 10560186, 10625725, 10625468, 10691007,
	10691007, 10756543, 10756289, 10756289, 10756289, 10756289, 10691007, 10625214,
	10625468, 10559932, 10560186, 10429114, 10363576, 10298040, 10232501, 10101429,
	10101683, 9970608, 9970608, 9773998, 9773998, 9642923, 9511848, 9511848,
	9381030, 9381030, 9249956, 9053345, 8987806, 8922270, 8856731, 8725656,
	8594839, 8463510, 8397971, 8201360, 8070287, 8070285, 7939211, 7807625,
	7676805, 7545732, 7479937, 7283582, 7152508, 7086972, 6890361, 6759029,
	6627700, 6496882, 6366064, 6300269, 6169194, 6103399, 5840997, 5775716,
	5513312, 5448030, 5251162, 5054551, 5054806, 4857684, 4661073, 4595534,
	4398666, 4267337, 4136776, 4070981, 4005186, 3874111, 3677502, 3480634,
	3414840, 3283767, 3152951, 3152949, 3153203, 3153203, 3153460, 3153460,
	3219253, 3285046, 3350839, 3416632, 3482425, 3614011, 3811133, 3942465,
	4008260, 4336455, 4533321, 4664908, 4730701, 4993362, 5124948, 5256536,
	5650013, 5781599, 6044003, 6175589, 6306920, 6504042, 6701167, 6898035,
	7029621, 7292279, 7489404, 7686526, 7752064, 8014722, 8080261, 8277127,
];

const k_unOverabundanceOfRottingFlesh = [
	12703514, 12703514, 12703514, 12703516, 12703516, 12703514, 12572700, 12506907,
	12506907, 12506652, 12506907, 12506907, 12506652, 12506652, 12506907, 12506652,
	12506652, 12506652, 12506654, 12506654, 12440861, 12441374, 12441374, 12375581,
	12375581, 12375583, 12375583, 12375583, 12375583, 12309536, 12309536, 12309536,
	12309536, 12309537, 12112928, 12243744, 12243744, 12177697, 12046881, 12046881,
	11981090, 11915299, 11915299, 11915044, 11915044, 11849253, 11783206, 11783206,
	11717415, 11717417, 11651624, 11585576, 11519785, 11519787, 11453994, 11388460,
	11387948, 11256621, 11190830, 11190832, 11124785, 11058993, 11058995, 10992948,
	10992950, 10861364, 10795572, 10729527, 10729527, 10663736, 10597690, 10466106,
	10466106, 10465852, 10400062, 10334015, 10202431, 10202433, 10136640, 10136385,
	10004801, 10004803, 10004549, 9938243, 10004037, 9938244, 9938246, 9872199,
	9937478, 9937224, 9871431, 9871433, 9871433, 9805640, 9870921, 9805128,
	9805128, 9805128, 9805128, 9805128, 9739337, 9804360, 9804360, 9804360,
	9804360, 9804360, 9869640, 9869640, 9803847, 9803847, 9803847, 9803847,
	9738054, 9803334, 9737541, 9672261, 9672261, 9672261, 9606468, 9606470,
	9606470, 9540677, 9475397, 9475397, 9409604, 9409604, 9212739, 9212741,
	9212741, 9146948, 9081668, 9081668, 8950596, 8950596, 9015875, 9015875,
	9081668, 9081668, 9081664, 8950850, 8950848, 8885568, 8819775, 8951359,
	8950846, 9016894, 9016892, 9016892, 9016890, 9147962, 9016376, 9147958,
	9082165, 9213494, 9081907, 9147698, 9147698, 9278768, 9212975, 9212973,
	9212716, 9278508, 9212713, 9212456, 9343272, 9212454, 9343524, 9343011,
	9277218, 9408034, 9342241, 9407523, 9341730, 9341730, 9341219, 9275426,
	9406242, 9339938, 9339938, 9339171, 9273380, 9272613, 9272613, 9141030,
	9206310, 9140519, 9140265, 9205290, 9138985, 9138985, 9138987, 9073453,
	9007662, 9007150, 9007150, 9137968, 9072945, 8941618, 9138484, 9007413,
	9138999, 9204788, 9270581, 9205556, 9271604, 9272115, 9469490, 9404210,
	9536049, 9536817, 9603119, 9734960, 9866542, 9801772, 9999147, 9999913,
	10197288, 10263848, 10264613, 10462244, 10462754, 10463776, 10661152, 10792988,
	10859547, 10991642, 11057688, 11190040, 11256086, 11388435, 11520274, 11521042,
	11652625, 11784463, 11784974, 11916813, 11916813, 11982604, 12048397, 12114188,
	12179981, 12246028, 12246028, 12311308, 12311308, 12311308, 12311308, 12377101,
	12377101, 12377101, 12377101, 12377101, 12377101, 12377101, 12377101, 12377101,
];

const k_unTheFlamesBelow = [
	11548953, 11614745, 11746074, 11877659, 12008987, 12140572, 12337693, 12469278,
	12666655, 12863776, 13060897, 13258274, 13455395, 13652772, 13849893, 14047014,
	14244391, 14375976, 14573097, 14704681, 14836010, 14967595, 15033387, 15164716,
	15164972, 15230508, 15230508, 15230508, 15164716, 15033387, 14967595, 14836010,
	14638889, 14507304, 14310183, 14112806, 13915685, 13718308, 13455651, 13258274,
	13060897, 12863776, 12666399, 12469278, 12272157, 12075036, 11943451, 11811866,
	11680538, 11614745, 11548953, 11548953, 11548953, 11614745, 11680538, 11746330,
	11877659, 12009244, 12206364, 12403485, 12600862, 12797983, 12995360, 13192482,
	13389859, 13652772, 13849893, 14047270, 14244391, 14441512, 14638889, 14770474,
	14901802, 15033387, 15099179, 15164972, 15230508, 15230508, 15098924, 14835755,
	14572586, 14177832, 13783078, 13322789, 12862755, 12468001, 12139295, 11811101,
	11614491, 11548954, 11549209, 11747351, 12011542, 12407317, 12869139, 13396754,
	13924369, 14451983, 14979598, 15506957, 15902989, 16298508, 16562443, 16759819,
	16760075, 16562188, 16166669, 15704590, 15110927, 14451217, 13791507, 13132053,
	12538390, 12011032, 11681049, 11548953, 11614745, 11812888, 12142615, 12538646,
	13066005, 13593875, 14187538, 14780944, 15308815, 15836430, 16232204, 16561932,
	16694283, 16760075, 16561932, 16100621, 15506958, 14846992, 14121490, 13395732,
	12670486, 12142359, 11746585, 11548953, 11614745, 11812632, 12076824, 12472343,
	12934165, 13395988, 13923859, 14517265, 15044880, 15506702, 15968269, 16298508,
	16562187, 16759819, 16760075, 16627979, 16298508, 15902733, 15375374, 14781967,
	14188560, 13594897, 13066771, 12539156, 12077334, 11747351, 11549209, 11548954,
	11680028, 11876637, 12139295, 12533793, 12928291, 13323045, 13783335, 14178088,
	14572586, 14836011, 15098924, 15230508, 15230508, 15164972, 15099179, 15033387,
	14901802, 14770474, 14638889, 14441768, 14244391, 14047270, 13849893, 13652772,
	13455395, 13192482, 12995360, 12797983, 12600862, 12403485, 12206364, 12074780,
	11877659, 11746330, 11680538, 11614745, 11548953, 11548953, 11548953, 11614745,
	11680538, 11811866, 11943451, 12075036, 12272157, 12403742, 12600863, 12863776,
	13060897, 13258274, 13455395, 13718308, 13915685, 14112806, 14310183, 14507304,
	14638889, 14836010, 14967339, 15033387, 15164716, 15230508, 15230508, 15230508,
	15164972, 15164716, 15033387, 14967595, 14836010, 14704681, 14573097, 14375976,
	14244391, 14047014, 13849893, 13652772, 13455395, 13258274, 13060897, 12863776,
	12666655, 12469278, 12337693, 12140572, 12008987, 11877659, 11746074, 11614745,
];

const k_unThatQueesyFeeling = [
	7439904, 7571489, 7703329, 7900706, 8032547, 8295716, 8493349, 8756518,
	9019943, 9283369, 9546794, 9810219, 10073644, 10402606, 10666031, 10929200,
	11192625, 11390259, 11653428, 11851061, 12048437, 12180278, 12312119, 12443703,
	12509496, 12575288, 12575288, 12509496, 12443703, 12312119, 12180278, 11982901,
	11785268, 11522099, 11258674, 10995249, 10731823, 10468398, 10139181, 9810219,
	9546794, 9217576, 8954151, 8690726, 8427557, 8229924, 7966755, 7834914,
	7637537, 7571488, 7440160, 7439904, 7439904, 7505696, 7637281, 7769121,
	7900962, 8098339, 8361508, 8624933, 8888359, 9151784, 9415209, 9744171,
	10073388, 10336814, 10666031, 10929456, 11192882, 11456051, 11719476, 11982645,
	12114486, 12311863, 12443447, 12509496, 12575288, 12575288, 12509496, 12443703,
	12311863, 12180278, 11982645, 11785012, 11521843, 11258674, 10995249, 10731823,
	10402862, 10139181, 9810219, 9546794, 9283368, 8954151, 8690982, 8427557,
	8229924, 8032291, 7834914, 7703073, 7571489, 7505696, 7439904, 7439904,
	7505696, 7571745, 7703329, 7900706, 8098083, 8295716, 8559141, 8822310,
	9085736, 9349161, 9678378, 9941804, 10270765, 10534447, 10863408, 11126833,
	11390258, 11653428, 11851061, 12048694, 12246070, 12377911, 12509240, 12575288,
	12575288, 12575288, 12509240, 12377911, 12246070, 12048694, 11851061, 11653428,
	11390258, 11126833, 10863408, 10534447, 10270765, 9941804, 9678378, 9349161,
	9085736, 8822310, 8559141, 8295716, 8098083, 7900706, 7703329, 7571745,
	7505696, 7439904, 7439904, 7505696, 7571489, 7703073, 7834914, 8032291,
	8229924, 8427557, 8690982, 8954151, 9283368, 9546794, 9810219, 10139181,
	10402862, 10731823, 10995249, 11258674, 11521843, 11785012, 11982645, 12180278,
	12311863, 12443703, 12509496, 12575288, 12575288, 12509496, 12443447, 12311863,
	12180022, 11982645, 11719476, 11521843, 11258418, 10929456, 10666031, 10336814,
	10073388, 9744427, 9480745, 9151784, 8888359, 8624933, 8361508, 8163875,
	7900962, 7769121, 7637281, 7505696, 7439904, 7439904, 7440160, 7571488,
	7637537, 7834914, 7966755, 8164132, 8427557, 8690726, 8954151, 9217576,
	9546538, 9810219, 10139181, 10402606, 10731823, 10995249, 11258674, 11521843,
	11785268, 11982645, 12180278, 12312119, 12443703, 12509496, 12575288, 12575288,
	12509496, 12443703, 12312119, 12180278, 12048437, 11851061, 11653428, 11390259,
	11192625, 10929200, 10666031, 10402606, 10073644, 9810219, 9546794, 9283369,
	9019943, 8756518, 8493349, 8295716, 8032547, 7900706, 7703329, 7571489,
];

const k_unBubbleBubble = [
	9094364, 9160156, 9291485, 9357278, 9488607, 9685472, 9816801, 10013922,
	10145251, 10342372, 10539237, 10736358, 10933479, 11130345, 11327466, 11458795,
	11655916, 11852781, 11984366, 12115695, 12247024, 12378352, 12444145, 12509681,
	12575474, 12641010, 12641010, 12575474, 12509681, 12444145, 12312816, 12181487,
	12049902, 11853037, 11655916, 11458795, 11261930, 11064808, 10802151, 10605030,
	10407908, 10211043, 10013922, 9816801, 9619936, 9488607, 9357022, 9225693,
	9160156, 9094364, 9094364, 9094364, 9159900, 9225693, 9357022, 9553886,
	9751008, 9948129, 10210786, 10473444, 10736102, 11064551, 11392745, 11655659,
	11983853, 12312303, 12640496, 12903410, 13166068, 13494262, 13691383, 13954040,
	14150905, 14282490, 14413819, 14545148, 14545148, 14545148, 14545148, 14413819,
	14282490, 14151162, 13954040, 13756919, 13494262, 13231604, 12968947, 12706289,
	12377839, 12115181, 11786732, 11458538, 11195880, 10867430, 10604773, 10342115,
	10079458, 9816800, 9619679, 9422814, 9291485, 9160156, 9094364, 9094364,
	9094364, 9094364, 9160157, 9291485, 9422814, 9554143, 9685472, 9882593,
	10079458, 10276579, 10473701, 10736358, 10933479, 11130345, 11327466, 11590123,
	11787245, 11918574, 12115695, 12247024, 12378352, 12509681, 12575218, 12641010,
	12641010, 12641010, 12575218, 12509681, 12378352, 12247024, 12115695, 11918574,
	11787245, 11590123, 11327466, 11130345, 10933479, 10736358, 10473701, 10276579,
	10079458, 9882593, 9685472, 9554143, 9422814, 9291485, 9160157, 9094364,
	9094364, 9094364, 9094364, 9160156, 9291485, 9422814, 9619679, 9816800,
	10079458, 10342115, 10604773, 10867430, 11195880, 11458538, 11786732, 12115181,
	12377839, 12706289, 12968947, 13231604, 13494262, 13756919, 13954040, 14151162,
	14282490, 14413819, 14545148, 14545148, 14545148, 14545148, 14413819, 14282490,
	14150905, 13954040, 13691383, 13494262, 13231604, 12903410, 12640497, 12312303,
	11983853, 11721195, 11392745, 11064551, 10801638, 10473444, 10210786, 9948129,
	9751008, 9553887, 9357022, 9225693, 9159900, 9094364, 9094364, 9094364,
	9160156, 9225693, 9357022, 9488351, 9619935, 9816801, 10013922, 10210787,
	10407908, 10605030, 10802151, 11064808, 11261674, 11458795, 11655916, 11853037,
	12049902, 12181231, 12312560, 12443889, 12575217, 12641010, 12641010, 12641010,
	12575474, 12575217, 12509681, 12378352, 12247024, 12115695, 11984366, 11852781,
	11655916, 11524331, 11327466, 11130345, 10933479, 10736358, 10539237, 10342372,
	10145251, 10013922, 9816801, 9685472, 9554143, 9422814, 9291485, 9160156,
];

// TODO: what is this paint ?
const k_unAfraidOfShadowsDark = [
	4536928, 4536928, 4602721, 4602721, 4668515, 4668515, 4734308, 4734308,
	4734308, 4734309, 4734309, 4734309, 4865896, 4865896, 4931689, 4931689,
	4997226, 4997226, 5063019, 5063019, 5128813, 5194606, 5194607, 5260400,
	5260400, 5391730, 5457523, 5457524, 5457524, 5523317, 5589111, 5654904,
	5654905, 5654905, 5720698, 5852028, 5917821, 5917822, 5983615, 5983615,
	6115202, 6115202, 6115203, 6180996, 6312326, 6378119, 6378120, 6443913,
	6444683, 6576785, 6577556, 6709913, 6710941, 6843555, 6844583, 6845868,
	6912945, 6914230, 6915515, 6982592, 6983877, 6985161, 6986446, 6987986,
	6989014, 6924762, 6926046, 6926817, 6862308, 6863079, 6863593, 6798827,
	6799597, 6799083, 6929385, 6863079, 6927845, 6992866, 7057632, 7187677,
	7252442, 7382487, 7447251, 7577296, 7641805, 7772362, 7836871, 7967172,
	8097473, 8227774, 8292283, 8422841, 8487607, 8749750, 8814516, 8879794,
	8945072, 9075888, 8946614, 8752575, 8427464, 8102353, 7842008, 7647197,
	7582176, 7842777, 8233938, 8559562, 8950979, 9277117, 9537977, 9733814,
	9734070, 9734070, 9734070, 9734070, 9734071, 9799863, 9799863, 9799863,
	9799863, 9799863, 9799863, 9799863, 9799863, 9799604, 9799863, 9799604,
	9799344, 9733548, 9733032, 9732771, 9732509, 9731992, 9731473, 9731211,
	9796485, 9861502, 9861239, 9926256, 10057321, 10122338, 10253403, 10450004,
	10580557, 10777414, 10974016, 11235897, 11432754, 11629612, 11825958, 12088353,
	12350747, 12547606, 12875538, 13072654, 13203723, 13531656, 13729032, 13729032,
	13794568, 13991688, 14188808, 14254344, 14385672, 14451464, 14648328, 14845704,
	14977032, 15108360, 15239689, 15436809, 15568393, 15831050, 15962892, 16160781,
	16226832, 16293140, 16294170, 16294943, 16295713, 16296229, 16297257, 16363566,
	16364595, 16365365, 16431930, 16432957, 16433729, 16500037, 16501065, 16501836,
	16502864, 16503634, 16569685, 16570712, 16571482, 16637789, 16638303, 16639072,
	16639586, 16640355, 16640869, 16707173, 16707430, 16707943, 16708456, 16708712,
	16709224, 16775016, 16775272, 16775784, 16776040, 16776552, 16776295, 16776551,
	16776551, 16776039, 16709991, 16709736, 16709224, 16511336, 16247913, 16116074,
	15786858, 15457899, 15193963, 14865004, 14601837, 14206573, 13811822, 13351022,
	12890479, 12429935, 11969392, 11508591, 11048049, 10587504, 10192752, 9732208,
	9337455, 8877166, 8482670, 8153453, 7758957, 7430252, 7101291, 6772586,
	6509418, 6246505, 5983337, 5786216, 5588840, 5391719, 5194599, 5063014,
];

const pointSampleContentTeamRed = new Map<Paints, number[]>([
	[Paints.DieJob, k_unWitchYellow],
	[Paints.ChromaticCorruption, k_unDistinctiveLackOfSanity],
	[Paints.PutrescentPigmentation, k_unOverabundanceOfRottingFlesh],
	[Paints.SpectralSpectrum, k_unTheFlamesBelow],
	[Paints.SinisterStaining, k_unThatQueesyFeeling],
]);
const pointSampleContentTeamBlu = new Map<Paints, number[]>([
	[Paints.DieJob, k_unWitchYellow],
	[Paints.ChromaticCorruption, k_unDistinctiveLackOfSanity],
	[Paints.PutrescentPigmentation, k_unOverabundanceOfRottingFlesh],
	[Paints.SpectralSpectrum, k_unBubbleBubble],
	[Paints.SinisterStaining, k_unThatQueesyFeeling],
]);
